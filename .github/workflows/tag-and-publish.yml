name: Tag and Publish

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetches full history for version comparison

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: npm ci

      - name: Get package version
        id: package-version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check-tag
        run: |
          TAG="v${{ steps.package-version.outputs.VERSION }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists, skipping tag creation"
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "Tag $TAG does not exist, proceeding"
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Git tag
        if: steps.check-tag.outputs.TAG_EXISTS == 'false'
        run: |
          TAG="v${{ steps.package-version.outputs.VERSION }}"
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: Build
        run: npm run build # Remove or adjust if no build step

      - name: Publish to npm
        if: steps.check-tag.outputs.TAG_EXISTS == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check-tag.outputs.TAG_EXISTS == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.VERSION }}
          release_name: Release v${{ steps.package-version.outputs.VERSION }}
          body: |
            Automated release for version ${{ steps.package-version.outputs.VERSION }}.
            See package.json or changelog for details.
          draft: false
          prerelease: false
